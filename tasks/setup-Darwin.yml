---
- name: Run Xcode tasks
  include_tasks: install-Xcode.yml
  loop: "{{ xcode_versions }}"

# Xcode.app will be set to the first version of Xcode in the xcode_versions variable
- name: Link to Xcode.app
  become: true
  file:
    src: /Applications/Xcode{{ xcode_versions[0].major }}.{{ xcode_versions[0].minor }}.app
    dest: /Applications/Xcode.app
    state: link
    owner: root
    group: wheel

- name: Check for xcode resources
  become: true
  command: pkgutil --pkgs=com.apple.pkg.{{ item }}
  register: pkgutil
  loop:
    - MobileDevice
    - MobileDeviceDevelopment
    - XcodeSystemResources
  ignore_errors: true
  changed_when: false

# Can only have 1 version installed at a time, just pick the latest
- name: Install required xcode resources
  become: true
  command: installer -pkg /Applications/Xcode{{ xcode_versions[0].major }}.app/Contents//Resources/Packages/{{ item }}.pkg -target /
  when: pkgutil.results[i].rc == 1
  loop:
    - MobileDevice
    - MobileDeviceDevelopment
    - XcodeSystemResources
  loop_control:
    index_var: i

# BUILD-7136
- name: Download simulators
  become: true
  get_url:
    url: "https://s3.amazonaws.com/boxes.10gen.com/build/xcode_simulators/com.apple.pkg.{{ item }}.pkg"
    dest: "{{ xcode_download_location }}/com.apple.pkg.{{ item }}.pkg"
  loop:
    - WatchSimulatorSDK4_2
    - AppleTVSimulatorSDK10_2
    - iPhoneSimulatorSDK11_0
    - AppleTVSimulatorSDK11_0

- name: OSX | Check for simulators
  become: true
  command: pkgutil --pkgs=com.apple.pkg.{{ item }}
  register: pkgutil
  loop:
    - WatchSimulatorSDK4_2
    - AppleTVSimulatorSDK10_2
    - iPhoneSimulatorSDK11_0
    - AppleTVSimulatorSDK11_0
  ignore_errors: true
  changed_when: false

- name: OSX | Install simulators
  become: true
  command: installer -pkg {{ xcode_download_location }}/com.apple.pkg.{{ item }}.pkg -target /
  when: pkgutil.results[i].rc == 1
  loop:
    - WatchSimulatorSDK4_2
    - AppleTVSimulatorSDK10_2
    - iPhoneSimulatorSDK11_0
    - AppleTVSimulatorSDK11_0
  loop_control:
    index_var: i

- name: Check if /usr/include exists
  stat:
    path: /usr/include
  register: usrinclude

# Requires command line tools to be installed first
- name: Set up /usr/include
  become: true
  command: installer -pkg /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg -target /
  when:
    - not usrinclude.stat.exists
    - ansible_distribution_version < '10.15.0'

- name: Set up /usr/include for 10.15
  become: true
  file:
    src: "/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/usr/include"
    dest: "/usr/include"
    state: link
  when: ansible_distribution_version >= '10.15.0'
